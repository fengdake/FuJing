<template>
  <a-modal
    :title="title"
    :width="800"
    :visible="visible"
    :confirmLoading="confirmLoading"
    @ok="handleOk"
    @cancel="handleCancel"
    cancelText="关闭">

    <a-spin :spinning="confirmLoading">
      <a-form :form="form">

        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="工资年月">
          <a-date-picker v-decorator="[ 'gzny', {}]"/>
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="银行卡号">
          <a-input placeholder="请输入银行卡号" v-decorator="['yhkh', {}]"/>
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="工资发放银行">
          <a-input placeholder="请输入工资发放银行" v-decorator="['gzffyh', {}]"/>
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="保险基数">
          <a-input placeholder="请输入保险基数" v-decorator="['bxjs', {}]"/>
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="保险缴纳情况（正常五险、未参保、其他）">
          <a-input placeholder="请输入保险缴纳情况（正常五险、未参保、其他）" v-decorator="['bxjnqk', {}]"/>
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="基本工资">
          <a-input placeholder="请输入基本工资" v-decorator="['jbgz', {}]"/>
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="加款项：考核绩效（元）">
          <a-input placeholder="请输入加款项：考核绩效（元）" v-decorator="['jkxKhjx', {}]"/>
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="加款项：执勤补助（元）">
          <a-input placeholder="请输入加款项：执勤补助（元）" v-decorator="['jkxZqbz', {}]"/>
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="加款项：其他（元）">
          <a-input placeholder="请输入加款项：其他（元）" v-decorator="['jkxQt', {}]"/>
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="加款项：考核扣款（元）">
          <a-input placeholder="请输入加款项：考核扣款（元）" v-decorator="['kkxKhkk', {}]"/>
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="扣款项：个人保险（元）">
          <a-input placeholder="请输入扣款项：个人保险（元）" v-decorator="['kkxGrbx', {}]"/>
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="扣款项：其他（元）">
          <a-input placeholder="请输入扣款项：其他（元）" v-decorator="['kkxQt', {}]"/>
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="实发数（元）">
          <a-input placeholder="请输入实发数（元）" v-decorator="['sfs', {}]"/>
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="审批结果">
          <a-input placeholder="请输入审批结果" v-decorator="['spjg', {}]"/>
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="身份证号">
          <a-input placeholder="请输入身份证号" v-decorator="['sfzh', {}]"/>
        </a-form-item>

      </a-form>
    </a-spin>
  </a-modal>
</template>

<script>
    import {httpAction} from '@/api/manage'
    import pick from 'lodash.pick'
    import moment from "moment"

    export default {
        name: "FjgzxxModal",
        data() {
            return {
                title: "操作",
                visible: false,
                model: {},
                labelCol: {
                    xs: {span: 24},
                    sm: {span: 5},
                },
                wrapperCol: {
                    xs: {span: 24},
                    sm: {span: 16},
                },

                confirmLoading: false,
                form: this.$form.createForm(this),
                validatorRules: {},
                url: {
                    add: "/rsda/fjgzxx/add",
                    edit: "/rsda/fjgzxx/edit",
                },
            }
        },
        created() {
        },
        methods: {
            add() {
                this.edit({});
            },
            edit(record) {
                this.form.resetFields();
                this.model = Object.assign({}, record);
                this.visible = true;
                this.$nextTick(() => {
                    this.form.setFieldsValue(pick(this.model, 'yhkh', 'gzffyh', 'bxjs', 'bxjnqk', 'jbgz', 'jkxKhjx', 'jkxZqbz', 'jkxQt', 'kkxKhkk', 'kkxGrbx', 'kkxQt', 'sfs', 'spjg', 'sfzh'))
                    //时间格式化
                    this.form.setFieldsValue({gzny: this.model.gzny ? moment(this.model.gzny) : null})
                });

            },
            close() {
                this.$emit('close');
                this.visible = false;
            },
            handleOk() {
                const that = this;
                // 触发表单验证
                this.form.validateFields((err, values) => {
                    if (!err) {
                        that.confirmLoading = true;
                        let httpurl = '';
                        let method = '';
                        if (!this.model.id) {
                            httpurl += this.url.add;
                            method = 'post';
                        } else {
                            httpurl += this.url.edit;
                            method = 'put';
                        }
                        let formData = Object.assign(this.model, values);
                        //时间格式化
                        formData.gzny = formData.gzny ? formData.gzny.format() : null;

                        console.log(formData)
                        httpAction(httpurl, formData, method).then((res) => {
                            if (res.success) {
                                that.$message.success(res.message);
                                that.$emit('ok');
                            } else {
                                that.$message.warning(res.message);
                            }
                        }).finally(() => {
                            that.confirmLoading = false;
                            that.close();
                        })


                    }
                })
            },
            handleCancel() {
                this.close()
            },


        }
    }
</script>

<style lang="less" scoped>

</style>