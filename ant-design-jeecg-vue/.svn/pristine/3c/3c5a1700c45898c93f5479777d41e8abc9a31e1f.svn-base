<template>
  <a-modal
    :title="title"
    :width="800"
    :visible="visible"
    :confirmLoading="confirmLoading"
    @ok="handleOk"
    @cancel="handleCancel"
    cancelText="关闭"
   
  >
    <a-spin :spinning="confirmLoading">
      <a-form :form="form"  style="height:500px;overflow-y: auto;">
        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="身份证号">
          <a-input-search
            placeholder="请输入身份证号"
            @search="onSearch"
            enterButton="查询"
            v-decorator="['sfzh', validatorRules.sfzh]"
          />
        </a-form-item>
        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="姓名">
          <a-input placeholder v-decorator="['xm', {}]" disabled />
        </a-form-item>
        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="辅警编号">
          <a-input placeholder v-decorator="['fjbh', {}]" disabled />
        </a-form-item>
        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="银行卡号">
          <a-input placeholder v-decorator="['yhkh', {}]" disabled />
        </a-form-item>
        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="工资发放银行">
          <a-input placeholder v-decorator="['gzffyh', {}]" />
        </a-form-item>
        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="工资年月">
          <a-month-picker style="width:100%;" v-decorator="[ 'gzny', validatorRules.gzny]" />
        </a-form-item>
        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="保险基数">
          <a-input placeholder="请输入保险基数" v-decorator="['bxjs', {}]" />
        </a-form-item>
        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="保险缴纳情况">
          <a-select v-decorator="['bxjnqk', {}]">
            <a-select-option value="正常五险">正常五险</a-select-option>
            <a-select-option value="未参保">未参保</a-select-option>
            <a-select-option value="其他">其他</a-select-option>
          </a-select>
        </a-form-item>
        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="基本工资">
          <a-input type="number" placeholder="请输入基本工资" v-decorator="['jbgz', {}]" />
        </a-form-item>
        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="加款项:考核绩效(元)">
          <a-input type="number" placeholder="请输入加款项:考核绩效(元)" v-decorator="['jkxKhjx', {}]" />
        </a-form-item>
        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="加款项:执勤补助(元)">
          <a-input type="number" placeholder="请输入加款项:执勤补助(元)" v-decorator="['jkxZqbz', {}]" />
        </a-form-item>
        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="加款项:其他(元)">
          <a-input type="number" placeholder="请输入加款项:其他(元)" v-decorator="['jkxQt', {}]" />
        </a-form-item>
        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="扣款项:考核扣款(元)">
          <a-input placeholder="请输入扣款项:考核扣款(元)" v-decorator="['kkxKhkk', {}]" />
        </a-form-item>
        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="扣款项:个人养老(元)">
          <a-input placeholder="请输入扣款项:个人养老(元)" v-decorator="['kkxGryl', {}]" />
        </a-form-item>
        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="扣款项:个人医疗(元)">
          <a-input placeholder="请输入扣款项:个人医疗(元)" v-decorator="['kkxGrylbx', {}]" />
        </a-form-item>
        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="扣款项:个人失业(元)">
          <a-input placeholder="请输入扣款项:个人失业(元)" v-decorator="['kkxGrsy', {}]" />
        </a-form-item>
        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="扣款项:个人公积金(元)">
          <a-input placeholder="请输入扣款项:个人公积金(元)" v-decorator="['kkxGrgjj', {}]" />
        </a-form-item>
        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="扣款项:其他(元)">
          <a-input placeholder="请输入扣款项:其他(元)" v-decorator="['kkxQt', {}]" />
        </a-form-item>
        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="实发数(元)">
          <a-input placeholder="请输入实发数(元)" v-decorator="['sfs', {}]" />
        </a-form-item>
      </a-form>
    </a-spin>
  </a-modal>
</template>

<script>
import { httpAction, getAction } from '@/api/manage'
import pick from 'lodash.pick'
import moment from 'moment'

export default {
  name: 'FjgzxxModal',
  data() {
    return {
      title: '操作',
      visible: false,
      model: {},
      labelCol: {
        xs: { span: 24 },
        sm: { span: 5 }
      },
      wrapperCol: {
        xs: { span: 24 },
        sm: { span: 16 }
      },

      confirmLoading: false,
      form: this.$form.createForm(this),
      validatorRules: {
        sfzh: {
          rules: [
            {
              required: true,
              message: '请输入身份证号!'
            },
            { validator: this.validateSfzh }
          ]
        },gzny: {
          rules: [
            {
              required: true,
              message: '请选择工资年月!'
            }
          ]
        }
      },
      url: {
        add: '/rsda/fjgzxx/add',
        edit: '/rsda/fjgzxx/edit'
      }
    }
  },
  created() {},
  methods: {
    onSearch(value) {
      console.log(value)
      if (value == '' || value == null) {
        this.$message.warn('请输入身份证号')
        return
      }
      let obj = {
        sfzh: value
      }
      this.confirmLoading = true
      getAction('/rsda/fjgzxx/queryBySfzh', obj)
        .then(res => {
          if (res.success == true) {
            this.model = Object.assign({}, res.result)
            console.log(this.model)
            this.$nextTick(() => {
              this.form.setFieldsValue(
                pick(
                  this.model,
                  'xm',
                  'fjbh',
                  'yhkh'
                )
              )
            })
          } else {
            this.$message.error(res.message)
          }
        })
        .finally(() => {
          this.confirmLoading = false
        })
    },
    add() {
      this.edit({})
    },
    edit(record) {
      this.form.resetFields()
      this.model = Object.assign({}, record)
      this.visible = true
      this.$nextTick(() => {
        this.form.setFieldsValue(
          pick(
            this.model,
            'yhkh',
            'gzffyh',
            'bxjs',
            'bxjnqk',
            'jbgz',
            'jkxKhjx',
            'jkxZqbz',
            'jkxQt',
            'kkxKhkk',
            'kkxGryl',
            'kkxGrylbx',
            'kkxGrsy',
            'kkxGrgjj',
            'kkxQt',
            'sfs',
            'spjg',
            'sfzh'
          )
        )
        //时间格式化
        this.form.setFieldsValue({ gzny: this.model.gzny ? moment(this.model.gzny) : null })
      })
    },
    close() {
      this.$emit('close')
      this.visible = false
    },
    handleOk() {
      const that = this
      // 触发表单验证
      this.form.validateFields((err, values) => {
        if (!err) {
          that.confirmLoading = true
          let httpurl = ''
          let method = ''
          if (!this.model.id) {
            httpurl += this.url.add
            method = 'post'
          } else {
            httpurl += this.url.add
            method = 'post'
          }
          let formData = Object.assign(this.model, values)
          //时间格式化
          formData.gzny = formData.gzny ? formData.gzny.format() : null

          console.log(formData)
          httpAction(httpurl, formData, method)
            .then(res => {
              if (res.success) {
                that.$message.success(res.message)
                that.$emit('ok')
                that.close()
              } else {
                that.$message.warning(res.message)
              }
            })
            .finally(() => {
              that.confirmLoading = false
            })
        }
      })
    },
    handleCancel() {
      this.close()
    },
    validateSfzh(rule, code, callback) {
      var city = {
        11: '北京',
        12: '天津',
        13: '河北',
        14: '山西',
        15: '内蒙古',
        21: '辽宁',
        22: '吉林',
        23: '黑龙江 ',
        31: '上海',
        32: '江苏',
        33: '浙江',
        34: '安徽',
        35: '福建',
        36: '江西',
        37: '山东',
        41: '河南',
        42: '湖北 ',
        43: '湖南',
        44: '广东',
        45: '广西',
        46: '海南',
        50: '重庆',
        51: '四川',
        52: '贵州',
        53: '云南',
        54: '西藏 ',
        61: '陕西',
        62: '甘肃',
        63: '青海',
        64: '宁夏',
        65: '新疆',
        71: '台湾',
        81: '香港',
        82: '澳门',
        91: '国外 '
      }
      var tip = ''
      var pass = true

      if (!code || !/^\d{6}(18|19|20)?\d{2}(0[1-9]|1[012])(0[1-9]|[12]\d|3[01])\d{3}(\d|X)$/i.test(code)) {
        //console.log('身份证号格式错误')
        tip = '身份证号格式错误'
        pass = false
      } else if (!city[code.substr(0, 2)]) {
        tip = '地址编码错误'
        pass = false
      } else {
        //console.log('地址编码错误')
        //18位身份证需要验证最后一位校验位
        if (code.length == 18) {
          //console.log('18位身份证需要验证最后一位校验位')
          code = code.split('')
          //∑(ai×Wi)(mod 11)
          //加权因子
          var factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]
          //校验位
          var parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2]
          var sum = 0
          var ai = 0
          var wi = 0
          for (var i = 0; i < 17; i++) {
            ai = code[i]
            wi = factor[i]
            sum += ai * wi
          }
          var last = parity[sum % 11]
          if (parity[sum % 11] != code[17]) {
            tip = '校验位错误'
            pass = false
          }
        }
      }
      if (pass) {
        callback()
        code = code.join('')
      } else {
        callback('请输入正确的身份证号!')
      }
    }
  }
}
</script>

<style lang="less" scoped>
</style>